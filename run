#!/usr/bin/env python
import json
import os
import re
import subprocess
import zipfile


CONFIG_PATH = '/flywheel/v0/config.json'
INPUT_DIR = '/flywheel/v0/input/bruker'
OUTPUT_DIR = '/flywheel/v0/output'


def main():
    print('Loading config')
    with open(CONFIG_PATH) as config_file:
        job_config = json.load(config_file)
    config = job_config['config']

    print('Getting inputs')
    input_filename = os.listdir(INPUT_DIR)[0]
    input_filepath = os.path.join(INPUT_DIR, input_filename)
    with zipfile.ZipFile(input_filepath) as zf:
        zf.extractall(INPUT_DIR)

    print('Running Bru2')
    cmd = ['Bru2', '-f', '-z']
    if config['Actual Size']:
        cmd.append('-a')
    if config['Verbose']:
        cmd.append('-v')
    output_filename = re.sub(r'\.pv\d\.zip$', '', input_filename)
    output_filepath = os.path.join(OUTPUT_DIR, output_filename)
    cmd.extend(['-o', output_filepath, INPUT_DIR])
    try:
        output = subprocess.check_output(cmd).decode('utf8')
        if config['Verbose']:
            print('Command: `{}`'.format(' '.join(cmd)))
            print('Output:\n{}'.format(output))
    except subprocess.CalledProcessError as exc:
        exitcode, output = exc.returncode, ex.output.decode('utf8')
        print('Bru2 exited with {}'.format(exitcode))
        print('Command: `{}`'.format(' '.join(cmd)))
        print('Output:\n{}'.format(output))
        sys.exit(1)

    if not os.listdir(OUTPUT_DIR):
        print('No NIfTI outputs created')
        sys.exit(1)

    print('Adding metadata')
    metadata = {
        job_config['destination']['type']: {
            'files': [
                {'name': nifti, 'type': 'nifti', 'modality': 'MR'}
                for nifti in os.listdir(OUTPUT_DIR)
            ]
        }
    }
    metadata_filepath = os.path.join(OUTPUT_DIR, '.metadata.json')
    with open(metadata_filepath, 'w') as metadata_file:
        json.dump(metadata, metadata_file)

    print('Done')


if __name__ == '__main__':
    main()
